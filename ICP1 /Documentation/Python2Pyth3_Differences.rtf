{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red251\green0\blue129;
\red18\green139\blue2;\red10\green82\blue135;\red15\green114\blue1;\red20\green25\blue32;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c100000\c7843\c57647;
\cssrgb\c0\c60000\c0;\cssrgb\c0\c40000\c60000;\cssrgb\c0\c50980\c0;\cssrgb\c9804\c12941\c16863;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Below are the Difference Between Python 2 and Python 3 \
1. Unicode Strings: In Python 2 String are stored as ASCII by default while in Python 3 Strings are Unicode by default.\
2.Print : In Python 2 print statement looks like print \'93Hello World\'94 while in Python 3 it looks like print(\'93Hello world\'94)\
3. Integer Division : In Python 2 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 is preferred to use the floating value (like 7.0/5 or 7/5.0) to get the expected result when porting our code.\cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\pardeftab720\sl286\partightenfactor0
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 print\cf2 \strokec2  \cf2 \strokec5 7\cf2 \strokec2  \cf2 \strokec6 /\cf2 \strokec2  \cf2 \strokec5 5\cf2 \strokec2 \
\cf2 \strokec4 print\cf2 \strokec2  \cf2 \strokec6 -\strokec5 7\cf2 \strokec2  \cf2 \strokec6 /\cf2 \strokec2  \cf2 \strokec5 5\cf2 \strokec2 \'a0\'a0\'a0\
\'a0\
\cf2 \strokec7 '''\cf2 \strokec2 \
\cf2 \strokec7 Output in Python 2.x\cf2 \strokec2 \
\cf2 \strokec7 1\cf2 \strokec2 \
\cf2 \strokec7 -2\cf2 \strokec2 \
\cf2 \strokec7 Output in Python 3.x :\cf2 \strokec2 \
\cf2 \strokec7 1.4\cf2 \strokec2 \
\cf2 \strokec7 -1.4\
\
4. \cf8 \strokec8 Raising Exceptions: Python 3 requires different syntax for raising exceptions. If you want to output an error message to the user, you need to use the syntax:\cb1 \
\pard\pardeftab720\sl360\sa400\partightenfactor0
\cf8 \cb3 raise IOError(\'93your error message\'94)\
This syntax works in Python 2 as well. The following code works only in Python 2, not Python 3:\
raise IOError, \'93your error message\'94
\fs32 \
\pard\pardeftab720\sl286\partightenfactor0

\f1\fs26 \cf2 \strokec2 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
}